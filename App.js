import * as React from 'react';
import { View, StyleSheet, TouchableOpacity, Text } from 'react-native';
import { createAppContainer, } from 'react-navigation';
import { createStackNavigator } from 'react-navigation-stack';

import currency from './views/blindUI/currency'
import decide from './views/decide'
import blindHomePage from './views/blindUI/blindHomePage'
import volunteerHomePage from './views/volunteerUI/volunteerHomePage'
import login from './views/volunteerUI/login'
import signup from './views/volunteerUI/signup'
import createAccountB from './views/blindUI/createAccountB'
import image from './views/blindUI/displayImage'
import TextRecognitionCamera from './views/blindUI/TextRecognitionCamera'
import object from './views/blindUI/ObjectRecognitionPage'
import cam from './views/blindUI/cam'
import textPage from './views/blindUI/TextRecognition'
import VideoCall from './views/blindUI/VideoCall'
import call from './views/volunteerUI/call'

//import RouterComponent from './views/blindUI/calls/Router'
//import Video from './views/blindUI/calls/Video'


//import React, {Component} from "react";
//import PushNotification from "react-native-push-notification";
//import PushNotificationIOS from "@react-native-community/push-notification-ios";
//import { not } from 'react-native-reanimated';
// var PushNotification = require("react-native-push-notification");

// class PushController extends React.Component{
//     componentDidMount(){
//       console.log('in')
//       PushNotification.configure({
          
//         // (optional) Called when Token is generated (iOS and Android)
//         onRegister: function(token) {
//           console.log("TOKEN:", token);
//         },
      
//         // (required) Called when a remote or local notification is opened or received
//         onNotification: function(notification) {
//           console.log("NOTIFICATION:", notification);
      
//           // process the notification here
      
//           // required on iOS only 
//           notification.finish(PushNotificationIOS.FetchResult.NoData);
//         },
//         // Android only
//         senderID: "1090501687137",
//         // iOS only
//         permissions: {
//           alert: true,
//           badge: true,
//           sound: true
//         },
//         popInitialNotification: true,
//         requestPermissions: true
//       })

//     }
//     noti=()=>[
//       PushNotification.localNotification({
//         /* Android Only Properties */
//         id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
//         ticker: "My Notification Ticker", // (optional)
//         autoCancel: true, // (optional) default: true
//         largeIcon: "ic_launcher", // (optional) default: "ic_launcher"
//         smallIcon: "ic_notification", // (optional) default: "ic_notification" with fallback for "ic_launcher"
//         bigText: "My big text that will be shown when notification is expanded", // (optional) default: "message" prop
//         subText: "This is a subText", // (optional) default: none
//         color: "red", // (optional) default: system default
//         vibrate: true, // (optional) default: true
//         vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
//         tag: 'some_tag', // (optional) add tag to message
//         group: "group", // (optional) add group to message
//         ongoing: false, // (optional) set whether this is an "ongoing" notification
//         priority: "high", // (optional) set notification priority, default: high
//         visibility: "private", // (optional) set notification visibility, default: private
//         importance: "high", // (optional) set notification importance, default: high
//     })
//     ]
//     render(){
    
//         return (
//           <View style={{flex:1,justifyContent:'center'}}>
//             <TouchableOpacity
//             onPress={()=>this.noti()}>
//               <Text>token ss</Text>
//             </TouchableOpacity>
//           </View>
//         )
//     }
// }


const AppNavigator = createStackNavigator({
  decideP: {
    screen: decide,
  },
  blindHomePageP:{
    screen: blindHomePage,
  },
  volunteerHomePageP:{
    screen: volunteerHomePage,
  },
  loginP:{
    screen: login,
  },
  signupP:{
    screen: signup,
  },
  createAccountBP:{
    screen: createAccountB,
  },
  CurrencyP:{
    screen: currency
  },
  imageP:{
    screen: image
  },
  TextP:{
    screen: TextRecognitionCamera
  },
  objectP:{
    screen: object
  },
  CameraP:{
    screen: cam
  },
  textPageP:{
    screen: textPage
  },
  VideoCallP:{
    screen: VideoCall
  },
  callP:{
    screen: call
  },
});

export default createAppContainer(AppNavigator);